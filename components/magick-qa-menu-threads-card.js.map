{"version":3,"file":"magick-qa-menu-threads-card.js","sourceRoot":"","sources":["../src/components/magick-qa-menu-threads-card.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAGlD,IAAM,uBAAuB,GAA7B,MAAM,uBAAwB,SAAQ,UAAU;IAAhD;;QAeI,UAAK,GAOT,EAAE,CAAC;IAsCV,CAAC;IApCU,MAAM;QACb,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAC1B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;;;yBAGK,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;kBAEnD,IAAI,CAAC,CAAC;kBACN,IAAI,CAAC,CAAC;;OAEjB,CACF,EAAE,CAAC;IACN,CAAC;IAED,iEAAiE;IACxD,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;QACnD,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE/C,mDAAmD;QACnD,IAAI,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACzE,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;QACrC,CAAC;IACH,CAAC;IAED,iBAAiB,CAAC,SAAiB,EAAE,SAAiB;QACpD,MAAM,OAAO,GAAG,SAAS,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,SAAS,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;QAEnD,MAAM,CAAC,QAAQ,CAAC;YACd,GAAG,EAAE,OAAO;YACZ,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;;AA1De,8BAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;GAY3B,AAZqB,CAYpB;AAEO;IAAR,KAAK,EAAE;sDAOA;AAtBG,uBAAuB;IADnC,aAAa,CAAC,6BAA6B,CAAC;GAChC,uBAAuB,CA4DnC","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\n\n@customElement(\"magick-qa-menu-threads-card\")\nexport class MagickQAMenuThreadsCard extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      flex-direction: column;\n    }\n    .checkPosition {\n      padding: 8px 0px;\n    }\n\n    .checkPosition:hover {\n      background-color: gray;\n    }\n  `;\n\n  @state() cards: Array<{\n    x: number;\n    y: number;\n    id: number;\n    location: string;\n    saved: boolean;\n    content?: string;\n  }> = [];\n\n  override render() {\n    return html`${this.cards.map(\n      (card) => html`\n        <div\n          class=\"checkPosition\"\n          @mouseenter=\"${() => this.goToTicketPositon(card.x, card.y)}\"\n        >\n          <span>${card.x}</span>\n          <span>${card.y}</span>\n        </div>\n      `\n    )}`;\n  }\n\n  // Use connectedCallback instead of firstUpdated for side effects\n  override connectedCallback() {\n    super.connectedCallback();\n    const data = localStorage.getItem(\"cards\") || \"[]\";\n    const cardsFromLocalStorage = JSON.parse(data);\n\n    // Avoid triggering update if cards haven't changed\n    if (JSON.stringify(cardsFromLocalStorage) !== JSON.stringify(this.cards)) {\n      this.cards = cardsFromLocalStorage;\n    }\n  }\n\n  goToTicketPositon(xPosition: number, yPosition: number) {\n    const centerX = xPosition - window.innerWidth / 2;\n    const centerY = yPosition - window.innerHeight / 2;\n\n    window.scrollTo({\n      top: centerY,\n      left: centerX,\n      behavior: \"smooth\",\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"magick-qa-menu-threads-card\": MagickQAMenuThreadsCard;\n  }\n}\n"]}