{"version":3,"file":"magick-qa-threads.js","sourceRoot":"","sources":["../src/components/magick-qa-threads.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\n\n@customElement(\"magick-qa-threads\")\nexport class MagickQAThreads extends LitElement {\n  static override styles = css`\n    .magick-qa-threads {\n      position: absolute;\n      background-color: black;\n      color: white;\n      width: 200px;\n      height: 150px;\n      padding: 8px;\n      border-radius: 10px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n      z-index: 999997;\n    }\n\n    .card {\n      position: absolute;\n      background-color: #333;\n      color: white;\n      padding: 10px;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n      z-index: 999997;\n      min-width: 200px;\n      transition: all 0.3s ease;\n    }\n\n    .card.unsaved {\n      border-radius: 5px;\n    }\n\n    .card.saved {\n      border-radius: 50%;\n      width: 20px;\n      height: 20px;\n      min-width: 20px;\n      padding: 0;\n      cursor: pointer;\n      overflow: hidden;\n    }\n\n    .card.saved:hover {\n      border-radius: 5px;\n      width: auto;\n      height: auto;\n      min-width: 200px;\n      padding: 10px;\n    }\n\n    .card-content {\n      opacity: 1;\n      transition: opacity 0.3s ease;\n    }\n\n    .card.saved .card-content {\n      opacity: 0;\n    }\n\n    .card.saved:hover .card-content {\n      opacity: 1;\n    }\n\n    .save-button {\n      margin-top: 8px;\n      padding: 4px 8px;\n      background: #666;\n      border: none;\n      border-radius: 3px;\n      color: white;\n      cursor: pointer;\n    }\n\n    .save-button:hover {\n      background: #777;\n    }\n\n    .hidden {\n      display: none;\n    }\n  `;\n\n  @state() cards: Array<{\n    x: number;\n    y: number;\n    id: number;\n    location: string;\n    saved: boolean;\n    content?: string;\n  }> = [];\n\n  @state() isCardCreationMode = false;\n  @state() activeCard: number | null = null;\n  @state() canCreateCard = false;\n\n  override connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener(\"click\", this.handleClick.bind(this));\n  }\n\n  override disconnectedCallback() {\n    window.removeEventListener(\"click\", this.handleClick.bind(this));\n    super.disconnectedCallback();\n  }\n\n  setCardCreationMode(isActive: boolean) {\n    this.isCardCreationMode = isActive;\n    // if (!isActive) {\n    //   this.cards = this.cards.filter((card) => card.saved);\n    // }\n    this.canCreateCard = false;\n    this.activeCard = null;\n  }\n\n  handleClick(event: MouseEvent) {\n    if (!this.isCardCreationMode) return;\n\n    const target = event.target as HTMLElement;\n    if (target.closest(\".card\") || target.closest(\".save-button\")) {\n      return;\n    }\n\n    const x = event.pageX;\n    const y = event.pageY;\n\n    if (this.activeCard !== null) {\n      // Update existing card position\n      this.cards = this.cards.map((card) =>\n        card.id === this.activeCard ? { ...card, x, y } : card\n      );\n    } else if (this.canCreateCard) {\n      // Create new card\n      const newCard = {\n        x,\n        y,\n        id: Date.now(),\n        location: window.location.href,\n        saved: false,\n        content: `Note created at ${new Date().toLocaleString()}`,\n      };\n      this.cards = [...this.cards, newCard];\n      this.activeCard = newCard.id;\n    } else {\n      // Enable card creation for next click\n      this.canCreateCard = true;\n    }\n  }\n\n  handleSave(cardId: number) {\n    this.cards = this.cards.map((card) =>\n      card.id === cardId ? { ...card, saved: true } : card\n    );\n    this.activeCard = null;\n    this.canCreateCard = false;\n    // Save the updated cards to local storage\n    localStorage.setItem(\"cards\", JSON.stringify(this.cards));\n  }\n\n  // ${this.isCardCreationMode ? \"\" : \"hidden\"}\n\n  override render() {\n    return html`\n      ${this.cards.map(\n        (card) => html`\n          <div\n            class=\"card ${card.saved ? \"saved\" : \"unsaved\"}\"\n            style=\"left: ${card.x}px; top: ${card.y}px;\"\n          >\n            <div class=\"card-content\">\n              ${card.content}\n              ${!card.saved\n                ? html`\n                    <div>\n                      <button\n                        class=\"save-button\"\n                        @click=${() => this.handleSave(card.id)}\n                      >\n                        save\n                      </button>\n                    </div>\n                  `\n                : \"\"}\n            </div>\n          </div>\n        `\n      )}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"magick-qa-threads\": MagickQAThreads;\n  }\n}\n"]}